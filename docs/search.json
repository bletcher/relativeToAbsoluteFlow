[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Relative to absolute flow",
    "section": "",
    "text": "1 Introduction"
  },
  {
    "objectID": "simulation.html",
    "href": "simulation.html",
    "title": "2Â  Simulation",
    "section": "",
    "text": "Code\nlibrary(FAdist)\nlibrary(getPrepareWBData)\nlibrary(ggpubr)\nlibrary(tidyverse)\n\n\nFunctions to generate and plot flow time series and empirical cumulative distribution plots using a 2-parameter kappa function\n\n\nCode\ngetStreamFlow &lt;- function(n, shape, scale) {\n  if (n &lt;= 0) stop(\"n must be a positive integer\")\n\n  stream_flow_values &lt;- rkappa(n = n, shape = shape, scale = scale)\n  ts(stream_flow_values)\n}\n\n\nplotFlows &lt;- function(params)\n  #  nIn = 1000, shapeIn = 1.5, scaleIn = 2) \n  {\n  flowTS &lt;- getStreamFlow(params$n, params$shape, params$scale)\n  flowDF &lt;- data.frame(t = 1:params$n, flow = flowTS)\n  \n  # Convert time series data to a data frame for ggplot\n  if(params$logECDF) {\n    ecdfDF &lt;- data.frame(value = as.vector(log10(flowTS)))\n  } else {\n    ecdfDF &lt;- data.frame(value = as.vector(flowTS))\n  }\n  # Plot the ECDF using ggplot2\n  # \n  gFlow &lt;- ggplot(flowDF, aes(t, flow)) +\n    geom_line() +\n    labs(\n      x = \"Time\", \n      y = \"Steam flow\"\n    ) +\n    theme_publication()\n  # \n  gECDF &lt;- ggplot(ecdfDF, aes(x = value)) +\n    stat_ecdf(geom = \"step\") +\n    labs(\n      x = \"Stream flow\",\n      y = \"ECDF\"\n    ) +\n    geom_text(\n      aes(x = min(ecdfDF) + (max(ecdfDF) - min(ecdfDF)) * 0.25, y = 0.95), \n      label = paste0(\"shape = \", params$shape, \", scale = \", params$scale)\n    ) +\n    theme_publication()\n  \n  ggarrange(gFlow, gECDF)\n}\n\n\n\n\nCode\nparams &lt;- list(\n  n = 500,\n  shape = 1.5,\n  scale = 2,\n  logECDF = TRUE\n)\n\nplotFlows(params)\n\n\n\n\n\n\n\nCode\nparams &lt;- list(\n  n = 500,\n  shape = 2.5,\n  scale = 1,\n  logECDF = TRUE\n)\n\nplotFlows(params)\n\n\n\n\n\n\n\nCode\nparams &lt;- list(\n  n = 500,\n  shape = 5,\n  scale = .5,\n  logECDF = TRUE\n)\n\nplotFlows(params)"
  }
]